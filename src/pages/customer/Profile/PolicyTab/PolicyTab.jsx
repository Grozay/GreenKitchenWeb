import { useState } from 'react'
import Box from '@mui/material/Box'
import Grid from '@mui/material/Grid'
import Card from '@mui/material/Card'
import CardContent from '@mui/material/CardContent'
import Typography from '@mui/material/Typography'
import Button from '@mui/material/Button'
import Accordion from '@mui/material/Accordion'
import AccordionSummary from '@mui/material/AccordionSummary'
import AccordionDetails from '@mui/material/AccordionDetails'
import List from '@mui/material/List'
import ListItem from '@mui/material/ListItem'
import ListItemIcon from '@mui/material/ListItemIcon'
import ListItemText from '@mui/material/ListItemText'
import Chip from '@mui/material/Chip'
import Divider from '@mui/material/Divider'
import ExpandMoreIcon from '@mui/icons-material/ExpandMore'
import PolicyIcon from '@mui/icons-material/Policy'
import SecurityIcon from '@mui/icons-material/Security'
import PrivacyTipIcon from '@mui/icons-material/PrivacyTip'
import GavelIcon from '@mui/icons-material/Gavel'
import VerifiedUserIcon from '@mui/icons-material/VerifiedUser'
import CheckCircleIcon from '@mui/icons-material/CheckCircle'
import WarningIcon from '@mui/icons-material/Warning'
import InfoIcon from '@mui/icons-material/Info'

export default function PolicyTab({ customerDetails, setCustomerDetails }) {
  const [expandedAccordion, setExpandedAccordion] = useState('panel1')

  const handleAccordionChange = (panel) => (event, isExpanded) => {
    setExpandedAccordion(isExpanded ? panel : false)
  }

  const policies = [
    {
      id: 'panel1',
      title: 'üìã ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng',
      icon: <PolicyIcon />,
      content: {
        sections: [
          {
            title: 'ƒêi·ªÅu kho·∫£n chung',
            items: [
              'B·∫±ng vi·ªác s·ª≠ d·ª•ng d·ªãch v·ª•, b·∫°n ƒë·ªìng √Ω tu√¢n th·ªß c√°c ƒëi·ªÅu kho·∫£n n√†y',
              'Ch√∫ng t√¥i c√≥ quy·ªÅn thay ƒë·ªïi ƒëi·ªÅu kho·∫£n m√† kh√¥ng c·∫ßn b√°o tr∆∞·ªõc',
              'M·ªçi tranh ch·∫•p s·∫Ω ƒë∆∞·ª£c gi·∫£i quy·∫øt theo lu·∫≠t ph√°p Vi·ªát Nam'
            ]
          },
          {
            title: 'Quy·ªÅn v√† nghƒ©a v·ª•',
            items: [
              'B·∫°n c√≥ quy·ªÅn s·ª≠ d·ª•ng d·ªãch v·ª• m·ªôt c√°ch h·ª£p ph√°p',
              'Kh√¥ng ƒë∆∞·ª£c s·ª≠ d·ª•ng d·ªãch v·ª• cho m·ª•c ƒë√≠ch b·∫•t h·ª£p ph√°p',
              'B·∫£o m·∫≠t th√¥ng tin t√†i kho·∫£n c·ªßa m√¨nh'
            ]
          }
        ]
      }
    },
    {
      id: 'panel2',
      title: 'üîí Ch√≠nh s√°ch b·∫£o m·∫≠t',
      icon: <SecurityIcon />,
      content: {
        sections: [
          {
            title: 'Thu th·∫≠p th√¥ng tin',
            items: [
              'Th√¥ng tin c√° nh√¢n: t√™n, email, s·ªë ƒëi·ªán tho·∫°i, ƒë·ªãa ch·ªâ',
              'Th√¥ng tin ƒë∆°n h√†ng: m√≥n ƒÉn, th·ªùi gian, ƒë·ªãa ƒëi·ªÉm giao h√†ng',
              'Th√¥ng tin thanh to√°n: ph∆∞∆°ng th·ª©c, s·ªë ti·ªÅn (kh√¥ng l∆∞u th√¥ng tin th·∫ª)'
            ]
          },
          {
            title: 'S·ª≠ d·ª•ng th√¥ng tin',
            items: [
              'X·ª≠ l√Ω ƒë∆°n h√†ng v√† giao h√†ng',
              'G·ª≠i th√¥ng b√°o v√† c·∫≠p nh·∫≠t d·ªãch v·ª•',
              'C·∫£i thi·ªán ch·∫•t l∆∞·ª£ng d·ªãch v·ª• v√† tr·∫£i nghi·ªám ng∆∞·ªùi d√πng'
            ]
          },
          {
            title: 'B·∫£o v·ªá th√¥ng tin',
            items: [
              'M√£ h√≥a SSL/TLS cho m·ªçi giao d·ªãch',
              'Kh√¥ng chia s·∫ª th√¥ng tin v·ªõi b√™n th·ª© ba',
              'Tu√¢n th·ªß quy ƒë·ªãnh GDPR v√† Lu·∫≠t B·∫£o v·ªá d·ªØ li·ªáu c√° nh√¢n'
            ]
          }
        ]
      }
    },
    {
      id: 'panel3',
      title: 'üçΩÔ∏è Ch√≠nh s√°ch ƒë·∫∑t h√†ng',
      icon: <VerifiedUserIcon />,
      content: {
        sections: [
          {
            title: 'Quy tr√¨nh ƒë·∫∑t h√†ng',
            items: [
              'Ch·ªçn m√≥n ƒÉn t·ª´ menu v√† th√™m v√†o gi·ªè h√†ng',
              'X√°c nh·∫≠n ƒë·ªãa ch·ªâ giao h√†ng v√† th√¥ng tin thanh to√°n',
              'Nh·∫≠n x√°c nh·∫≠n ƒë∆°n h√†ng qua email/SMS'
            ]
          },
          {
            title: 'Ch√≠nh s√°ch h·ªßy ƒë∆°n',
            items: [
              'C√≥ th·ªÉ h·ªßy ƒë∆°n h√†ng trong v√≤ng 5 ph√∫t sau khi ƒë·∫∑t',
              'Sau 5 ph√∫t, ƒë∆°n h√†ng s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω v√† kh√¥ng th·ªÉ h·ªßy',
              'Li√™n h·ªá hotline ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ trong tr∆∞·ªùng h·ª£p ƒë·∫∑c bi·ªát'
            ]
          },
          {
            title: 'Th·ªùi gian giao h√†ng',
            items: [
              'Giao h√†ng trong v√≤ng 30-60 ph√∫t t√πy thu·ªôc kho·∫£ng c√°ch',
              'Th√¥ng b√°o tr∆∞·ªõc 10 ph√∫t khi ƒë·∫øn giao h√†ng',
              'B·ªìi th∆∞·ªùng n·∫øu giao h√†ng tr·ªÖ qu√° 15 ph√∫t so v·ªõi cam k·∫øt'
            ]
          }
        ]
      }
    },
    {
      id: 'panel4',
      title: 'üí∞ Ch√≠nh s√°ch thanh to√°n',
      icon: <GavelIcon />,
      content: {
        sections: [
          {
            title: 'Ph∆∞∆°ng th·ª©c thanh to√°n',
            items: [
              'Ti·ªÅn m·∫∑t khi nh·∫≠n h√†ng',
              'Chuy·ªÉn kho·∫£n ng√¢n h√†ng',
              'V√≠ ƒëi·ªán t·ª≠ (MoMo, ZaloPay, VNPay)',
              'Th·∫ª t√≠n d·ª•ng/ghi n·ª£ (Visa, Mastercard)'
            ]
          },
          {
            title: 'B·∫£o m·∫≠t thanh to√°n',
            items: [
              'M√£ h√≥a SSL 256-bit cho m·ªçi giao d·ªãch',
              'Kh√¥ng l∆∞u tr·ªØ th√¥ng tin th·∫ª t√≠n d·ª•ng',
              'Tu√¢n th·ªß ti√™u chu·∫©n PCI DSS'
            ]
          },
          {
            title: 'Ho√†n ti·ªÅn v√† b·ªìi th∆∞·ªùng',
            items: [
              'Ho√†n ti·ªÅn 100% n·∫øu m√≥n ƒÉn kh√¥ng ƒë√∫ng ch·∫•t l∆∞·ª£ng',
              'B·ªìi th∆∞·ªùng n·∫øu giao h√†ng tr·ªÖ ho·∫∑c sai ƒë·ªãa ch·ªâ',
              'X·ª≠ l√Ω ho√†n ti·ªÅn trong v√≤ng 3-5 ng√†y l√†m vi·ªác'
            ]
          }
        ]
      }
    },
    {
      id: 'panel5',
      title: 'üåü Ch√≠nh s√°ch th√†nh vi√™n',
      icon: <PrivacyTipIcon />,
      content: {
        sections: [
          {
            title: 'T√≠ch ƒëi·ªÉm th∆∞·ªüng',
            items: [
              'T√≠ch 1 ƒëi·ªÉm cho m·ªói 10,000 VNƒê chi ti√™u',
              'ƒêi·ªÉm c√≥ hi·ªáu l·ª±c trong 12 th√°ng',
              'ƒê·ªïi ƒëi·ªÉm l·∫•y coupon gi·∫£m gi√° ho·∫∑c m√≥n ƒÉn mi·ªÖn ph√≠'
            ]
          },
          {
            title: 'H·∫°ng th√†nh vi√™n',
            items: [
              'ENERGY: Chi ti√™u 0-2 tri·ªáu VNƒê/6 th√°ng',
              'VITALITY: Chi ti√™u 2-5 tri·ªáu VNƒê/6 th√°ng',
              'RADIANCE: Chi ti√™u tr√™n 5 tri·ªáu VNƒê/6 th√°ng'
            ]
          },
          {
            title: '∆Øu ƒë√£i ƒë·∫∑c bi·ªát',
            items: [
              'Gi·∫£m gi√° theo h·∫°ng th√†nh vi√™n',
              '∆Øu ti√™n giao h√†ng cho h·∫°ng cao',
              'T·∫∑ng m√≥n khai v·ªã mi·ªÖn ph√≠ cho h·∫°ng RADIANCE'
            ]
          }
        ]
      }
    }
  ]

  return (
    <Box sx={{
      width: '100%',
      maxWidth: '1200px',
      margin: '0 auto'
    }}>
      <Grid container spacing={3}>
        {/* Header Section */}
        <Grid size={12}>
          <Card sx={{
            background: 'linear-gradient(135deg, #9C27B0 0%, #673AB7 100%)',
            borderRadius: 3,
            boxShadow: '0 8px 32px rgba(156, 39, 176, 0.3)',
            textAlign: 'center',
            color: 'white'
          }}>
            <CardContent sx={{ p: { xs: 3, sm: 4, md: 5 } }}>
              <PolicyIcon sx={{ fontSize: '80px', mb: 2, opacity: 0.9 }} />
              <Typography variant="h4" sx={{
                fontWeight: 'bold',
                mb: 2,
                textShadow: '0 2px 4px rgba(0,0,0,0.3)'
              }}>
                Ch√≠nh S√°ch S·ª≠ D·ª•ng
              </Typography>
              <Typography variant="h6" sx={{
                opacity: 0.9,
                mb: 3
              }}>
                Th√¥ng tin chi ti·∫øt v·ªÅ quy·ªÅn l·ª£i v√† nghƒ©a v·ª• khi s·ª≠ d·ª•ng d·ªãch v·ª•
              </Typography>
            </CardContent>
          </Card>
        </Grid>

        {/* Quick Policy Summary */}
        <Grid size={12}>
          <Card sx={{ borderRadius: 3, boxShadow: '0 4px 20px rgba(0,0,0,0.1)' }}>
            <CardContent sx={{ p: 4 }}>
              <Typography variant="h6" sx={{ fontWeight: 600, mb: 3, textAlign: 'center' }}>
                üìã T√≥m t·∫Øt ch√≠nh s√°ch
              </Typography>
              <Grid container spacing={3}>
                {[
                  { icon: <CheckCircleIcon />, title: 'ƒê·∫∑t h√†ng d·ªÖ d√†ng', desc: 'Quy tr√¨nh ƒë∆°n gi·∫£n, nhanh ch√≥ng' },
                  { icon: <SecurityIcon />, title: 'B·∫£o m·∫≠t tuy·ªát ƒë·ªëi', desc: 'Th√¥ng tin ƒë∆∞·ª£c m√£ h√≥a SSL/TLS' },
                  { icon: <VerifiedUserIcon />, title: 'Giao h√†ng ƒë√∫ng gi·ªù', desc: 'Cam k·∫øt 30-60 ph√∫t' },
                  { icon: <PolicyIcon />, title: 'Ho√†n ti·ªÅn 100%', desc: 'N·∫øu kh√¥ng h√†i l√≤ng v·ªÅ ch·∫•t l∆∞·ª£ng' }
                ].map((item, index) => (
                  <Grid size={{ xs: 12, sm: 6, md: 3 }} key={index}>
                    <Box sx={{ textAlign: 'center', p: 2 }}>
                      <Box sx={{ color: 'primary.main', mb: 1 }}>
                        {item.icon}
                      </Box>
                      <Typography variant="subtitle1" sx={{ fontWeight: 600, mb: 1 }}>
                        {item.title}
                      </Typography>
                      <Typography variant="body2" color="text.secondary">
                        {item.desc}
                      </Typography>
                    </Box>
                  </Grid>
                ))}
              </Grid>
            </CardContent>
          </Card>
        </Grid>

        {/* Detailed Policies */}
        <Grid size={12}>
          <Card sx={{ borderRadius: 3, boxShadow: '0 4px 20px rgba(0,0,0,0.1)' }}>
            <CardContent sx={{ p: 4 }}>
              <Typography variant="h6" sx={{ fontWeight: 600, mb: 3, textAlign: 'center' }}>
                üìñ Chi ti·∫øt ch√≠nh s√°ch
              </Typography>
              
              {policies.map((policy) => (
                <Accordion
                  key={policy.id}
                  expanded={expandedAccordion === policy.id}
                  onChange={handleAccordionChange(policy.id)}
                  sx={{
                    mb: 2,
                    borderRadius: 2,
                    '&:before': { display: 'none' },
                    '&.Mui-expanded': {
                      boxShadow: '0 4px 16px rgba(0,0,0,0.1)'
                    }
                  }}
                >
                  <AccordionSummary
                    expandIcon={<ExpandMoreIcon />}
                    sx={{
                      backgroundColor: expandedAccordion === policy.id ? 'primary.light' : 'transparent',
                      borderRadius: 2,
                      '&:hover': {
                        backgroundColor: 'rgba(25, 118, 210, 0.04)'
                      }
                    }}
                  >
                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                      <Box sx={{ color: 'primary.main' }}>
                        {policy.icon}
                      </Box>
                      <Typography variant="h6" sx={{ fontWeight: 600 }}>
                        {policy.title}
                      </Typography>
                    </Box>
                  </AccordionSummary>
                  <AccordionDetails sx={{ pt: 3 }}>
                    <Grid container spacing={3}>
                      {policy.content.sections.map((section, sectionIndex) => (
                        <Grid size={{ xs: 12, sm: 6 }} key={sectionIndex}>
                          <Box sx={{
                            p: 3,
                            border: '1px solid',
                            borderColor: 'divider',
                            borderRadius: 2,
                            height: '100%'
                          }}>
                            <Typography variant="h6" sx={{ 
                              fontWeight: 600, 
                              mb: 2, 
                              color: 'primary.main',
                              display: 'flex',
                              alignItems: 'center',
                              gap: 1
                            }}>
                              <InfoIcon fontSize="small" />
                              {section.title}
                            </Typography>
                            <List dense>
                              {section.items.map((item, itemIndex) => (
                                <ListItem key={itemIndex} sx={{ px: 0 }}>
                                  <ListItemIcon sx={{ minWidth: 32 }}>
                                    <CheckCircleIcon sx={{ fontSize: 16, color: 'success.main' }} />
                                  </ListItemIcon>
                                  <ListItemText
                                    primary={item}
                                    primaryTypographyProps={{
                                      variant: 'body2',
                                      color: 'text.primary'
                                    }}
                                  />
                                </ListItem>
                              ))}
                            </List>
                          </Box>
                        </Grid>
                      ))}
                    </Grid>
                  </AccordionDetails>
                </Accordion>
              ))}
            </CardContent>
          </Card>
        </Grid>

        {/* Important Notices */}
        <Grid size={12}>
          <Card sx={{ 
            borderRadius: 3, 
            boxShadow: '0 4px 20px rgba(0,0,0,0.1)',
            border: '2px solid',
            borderColor: 'warning.main'
          }}>
            <CardContent sx={{ p: 4 }}>
              <Typography variant="h6" sx={{ 
                fontWeight: 600, 
                mb: 3, 
                textAlign: 'center',
                color: 'warning.main',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                gap: 1
              }}>
                <WarningIcon />
                L∆∞u √Ω quan tr·ªçng
              </Typography>
              
              <Grid container spacing={3}>
                <Grid size={{ xs: 12, sm: 6 }}>
                  <Box sx={{
                    p: 3,
                    backgroundColor: 'warning.light',
                    borderRadius: 2,
                    border: '1px solid',
                    borderColor: 'warning.main'
                  }}>
                    <Typography variant="subtitle1" sx={{ fontWeight: 600, mb: 2, color: 'warning.dark' }}>
                      ‚ö†Ô∏è ƒêi·ªÅu kho·∫£n thay ƒë·ªïi
                    </Typography>
                    <Typography variant="body2" color="warning.dark">
                      Ch√∫ng t√¥i c√≥ quy·ªÅn c·∫≠p nh·∫≠t ch√≠nh s√°ch n√†y b·∫•t c·ª© l√∫c n√†o. 
                      Nh·ªØng thay ƒë·ªïi s·∫Ω c√≥ hi·ªáu l·ª±c ngay khi ƒë∆∞·ª£c ƒëƒÉng t·∫£i tr√™n website.
                    </Typography>
                  </Box>
                </Grid>

                <Grid size={{ xs: 12, sm: 6 }}>
                  <Box sx={{
                    p: 3,
                    backgroundColor: 'info.light',
                    borderRadius: 2,
                    border: '1px solid',
                    borderColor: 'info.main'
                  }}>
                    <Typography variant="subtitle1" sx={{ fontWeight: 600, mb: 2, color: 'info.dark' }}>
                      ‚ÑπÔ∏è Li√™n h·ªá h·ªó tr·ª£
                    </Typography>
                    <Typography variant="body2" color="info.dark">
                      N·∫øu b·∫°n c√≥ th·∫Øc m·∫Øc v·ªÅ ch√≠nh s√°ch n√†y, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua:
                      Email: policy@greenkitchen.com ho·∫∑c Hotline: 1900-xxxx
                    </Typography>
                  </Box>
                </Grid>
              </Grid>
            </CardContent>
          </Card>
        </Grid>

        {/* Policy Version and Last Updated */}
        <Grid size={12}>
          <Card sx={{ borderRadius: 3, boxShadow: '0 4px 20px rgba(0,0,0,0.1)' }}>
            <CardContent sx={{ p: 4, textAlign: 'center' }}>
              <Typography variant="body2" color="text.secondary" gutterBottom>
                Phi√™n b·∫£n ch√≠nh s√°ch: v2.1
              </Typography>
              <Typography variant="body2" color="text.secondary" gutterBottom>
                C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: 15/12/2024
              </Typography>
              <Typography variant="body2" color="text.secondary">
                ¬© 2024 Green Kitchen. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
              </Typography>
            </CardContent>
          </Card>
        </Grid>
      </Grid>
    </Box>
  )
}
